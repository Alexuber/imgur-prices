{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/nanoid/index.browser.js","src/js/table.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n\nclass Table {\n  users;\n  constructor() {\n    this.users = [];\n    this.selectedId = null;\n  }\n\n  getJsonFromLocalStorage(key) {\n    const json = localStorage.getItem(key);\n    try {\n      const data = JSON.parse(json);\n      return data;\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n\n  saveToLocalStorage() {\n    localStorage.setItem('tableUsers', JSON.stringify(this.users));\n  }\n\n  addUser = e => {\n    e.preventDefault();\n    const {\n      elements: { name, email, age },\n    } = e.currentTarget;\n\n    if (Number(age.value) < 18 || Number(age.value) > 99) {\n      return alert('Age must be between 18 to 99');\n    }\n\n    if (this.selectedId) {\n      const userIndex = this.users.findIndex(\n        ({ id }) => id === this.selectedId\n      );\n      if (userIndex !== -1) {\n        this.users[userIndex].name = name.value;\n        this.users[userIndex].email = email.value;\n        this.users[userIndex].age = age.value;\n        this.selectedId = null;\n        this.saveToLocalStorage();\n      }\n    } else {\n      const newUser = {\n        id: nanoid(4),\n        name: name.value,\n        email: email.value,\n        age: age.value,\n      };\n\n      if (this.checkExistsUser(newUser)) {\n        this.users = [...this.users, newUser];\n        this.saveToLocalStorage();\n      }\n    }\n\n    e.currentTarget.reset();\n    this.selectedId = null;\n    this.render();\n  };\n\n  render = () => {\n    const usersTableBodyEl = document.getElementById('body');\n\n    const markup = this.users.map(\n      ({ id, name, email, age }) => `<tr>\n    <td>${id}</td>\n    <td>${name}</td>\n    <td>${email}</td>\n    <td>${age}</td>\n    <td class=\"options\">\n    <button type='button' class='edit' data-id='${id}'>Edit</button>\n    </td>\n    <td class=\"options\">\n      <button class='delete' type='submit' data-id='${id}'>Delete</button>\n    </td>\n  </tr>`\n    );\n\n    usersTableBodyEl.innerHTML = markup.join('');\n\n    usersTableBodyEl.addEventListener('click', event => {\n      const deleteButton = event.target.closest('.delete');\n      const editButton = event.target.closest('.edit');\n\n      if (deleteButton) {\n        const userId = deleteButton.dataset.id;\n        this.deleteUser(userId);\n      }\n\n      if (editButton) {\n        const userId = editButton.dataset.id;\n        this.editUser(userId);\n      }\n\n      const sortAscButton = document.querySelector('.sort-asc');\n      const sortDescButton = document.querySelector('.sort-desc');\n\n      sortAscButton.addEventListener('click', () => {\n        const column = sortAscButton.dataset.column;\n        this.sortAscending(column);\n      });\n\n      sortDescButton.addEventListener('click', () => {\n        const column = sortDescButton.dataset.column;\n        this.sortDescending(column);\n      });\n    });\n  };\n\n  deleteUser = userId => {\n    const refreshed = this.users.filter(({ id }) => id !== userId);\n    this.users = refreshed;\n\n    this.saveToLocalStorage();\n    const usersTableBodyEl = document.getElementById('body');\n\n    if (this.users.length === 0) {\n      return (usersTableBodyEl.innerHTML = '');\n    }\n    this.render();\n  };\n\n  editUser = userId => {\n    this.selectedId = userId;\n    const currentUser = this.users.find(({ id }) => id === userId);\n\n    const userForm = document.querySelector('form');\n    const nameInput = userForm.querySelector('#name');\n    const emailInput = userForm.querySelector('#email');\n    const ageInput = userForm.querySelector('#age');\n\n    nameInput.value = currentUser.name;\n    emailInput.value = currentUser.email;\n    ageInput.value = currentUser.age;\n  };\n\n  sortAscending = column => {\n    this.users.sort((a, b) => a[column] - b[column]);\n    this.render();\n  };\n\n  sortDescending = column => {\n    this.users.sort((a, b) => b[column] - a[column]);\n    this.render();\n  };\n\n  checkExistsUser = ({ name, email }) => {\n    const existsUser = this.users.some(\n      user => name === user.name || email === user.email\n    );\n\n    if (existsUser) {\n      alert('User or email already exists!');\n      return false;\n    }\n    return true;\n  };\n}\n\nconst table = new Table();\n\ntable.users = table.getJsonFromLocalStorage('tableUsers') || [];\ntable.render();\n\nconst userForm = document.querySelector('form');\n\nuserForm.addEventListener('submit', table.addUser);\n\nconst sortAscButton = document.querySelectorAll('.sort-asc');\nconst sortDescButton = document.querySelectorAll('.sort-desc');\n\nsortAscButton.forEach(asc => {\n  asc.addEventListener('click', () => {\n    const column = asc.dataset.column;\n    table.sortAscending(column);\n  });\n});\n\nsortDescButton.forEach(desc => {\n  desc.addEventListener('click', () => {\n    const column = desc.dataset.column;\n    table.sortDescending(column);\n  });\n});\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","$4fb0d0682013a380$var$table","getJsonFromLocalStorage","json","localStorage","getItem","JSON","parse","error","console","log","name","message","saveToLocalStorage","setItem","stringify","this","users","constructor","$parcel$interopDefault","e","preventDefault","elements","email","age","currentTarget","Number","alert","selectedId","userIndex","findIndex","newUser","checkExistsUser","reset","render","usersTableBodyEl","document","getElementById","markup","map","innerHTML","join","addEventListener","event","deleteButton","target","closest","editButton","userId","dataset","deleteUser","editUser","sortAscButton1","querySelector","sortDescButton1","column","sortAscending","sortDescending","refreshed","filter","length","currentUser","find","userForm1","nameInput","emailInput","ageInput","sort","a","b","some","user","addUser","$4fb0d0682013a380$var$sortAscButton","querySelectorAll","$4fb0d0682013a380$var$sortDescButton","forEach","asc","desc"],"version":3,"file":"table.10b80f4b.js.map"}